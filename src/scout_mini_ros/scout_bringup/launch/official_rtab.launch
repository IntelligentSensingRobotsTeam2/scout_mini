<launch>
  <!-- 用于scout mini的仿真调试 -->
  <!-- subscribe_depth/rgb will be enabled if depth is true -->
  <arg name="depth" default="true"/>

  <!-- Choose visualization -->
  <arg name="rtabmapviz" default="true" />
  <arg name="rviz" default="true" />

  <!-- Localization-only mode -->
  <arg name="localization" default="false"/>

  <!-- sim time for convenience, if playing a rosbag -->
  <arg name="use_sim_time" default="false"/>
  <param if="$(arg use_sim_time)" name="use_sim_time" value="true"/>

  <!-- Corresponding config files -->
  <arg name="cfg" default="" />
  <!-- To change RTAB-Map's parameters, set the path of config file (*.ini) generated by the standalone app -->
  <arg name="gui_cfg" default="~/.ros/rtabmap_gui.ini" />
  <!-- <arg name="rviz_cfg" default="$(find rtabmap_ros)/launch/config/rgbd.rviz" /> -->
  <arg name="rviz_cfg" default="$(find scout_description)/rviz/navi_rgbd.rviz" />

  <!-- <arg name="frame_id" default="camera_link"/> -->
  <arg name="frame_id" default="base_link"/>
  <!-- <arg name="frame_id" default="base_footprint"/> -->
  <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->
  <arg name="odom_frame_id" default=""/>
  <!-- If set, TF is used to get odometry instead of the topic -->
  <arg name="map_frame_id" default="map"/>
  <arg name="ground_truth_frame_id" default=""/>
  <!-- e.g., "world" -->
  <arg name="ground_truth_base_frame_id" default=""/>
  <!-- e.g., "tracker", a fake frame matching the frame "frame_id" (but on different TF tree) -->
  <arg name="namespace" default="rtabmap"/>
  <arg name="database_path" default="~/.ros/rtabmap.db"/>
  <arg name="queue_size" default="50"/>
  <arg name="wait_for_transform" default="0.2"/>
  <arg name="args" default=""/>
  <!-- delete_db_on_start, udebug -->
  <arg name="rtabmap_args" default="$(arg args)"/>
  <!-- deprecated, use "args" argument -->
  <arg name="launch_prefix" default=""/>
  <!-- for debugging purpose, it fills launch-prefix tag of the nodes -->
  <arg name="output" default="screen"/>
  <!-- Control node output (screen or log) -->
  <arg name="publish_tf_map" default="true"/>

  <!-- if timestamps of the input topics are synchronized using approximate or exact time policy-->
  <arg name="approx_sync" default="false"/>

  <!-- RGB-D related topics -->
  <arg name="rgb_topic" default="/camera/rgb/image_raw" />
  <arg name="depth_topic" default="/camera/depth/image_raw" />
  <arg name="camera_info_topic" default="/camera/rgb/camera_info" />
  <arg name="depth_camera_info_topic" default="$(arg camera_info_topic)" />


  <!-- Already synchronized RGB-D related topic, with rtabmap_ros/rgbd_sync nodelet -->
  <!-- TODO: Enable rgbd_sync-->
  <arg name="rgbd_sync" default="true"/>
  <!-- pre-sync rgb_topic, depth_topic, camera_info_topic -->
  <!-- Should be true for not synchronized camera topics 
           (e.g., false for kinectv2, zed, realsense, true for xtion, kinect360)-->
  <arg name="approx_rgbd_sync" default="false"/>
  <arg name="subscribe_rgbd" default="$(arg rgbd_sync)"/>
  <arg name="rgbd_topic" default="rgbd_image" />
  <arg name="depth_scale" default="1.0" />
  <!-- Deprecated, use rgbd_depth_scale instead -->
  <arg name="rgbd_depth_scale" default="$(arg depth_scale)" />
  <arg name="rgbd_decimation" default="1" />
  <!-- TODO: use fake scan -->
  <arg name="subscribe_scan" default="true"/>
  <arg name="scan_topic" default="/scan"/>
  <!-- use filtered cloud from icp_odometry for mapping -->

  <arg name="visual_odometry" default="true"/>
  <!-- Launch rtabmap visual odometry node -->

  <!-- TODO: use odom published by scout mini -->
  <!-- <arg name="odom_topic" default="/odom"/> -->
  <arg name="odom_topic" default="odom"/>
  <!-- Odometry topic name -->

  <arg name="vo_frame_id" default="$(arg odom_topic)"/>
  <!-- Visual/Icp odometry frame ID for TF -->
  <arg name="publish_tf_odom" default="true"/>
  <arg name="odom_tf_angular_variance" default="1"/>
  <!-- If TF is used to get odometry, this is the default angular variance -->
  <arg name="odom_tf_linear_variance" default="1"/>
  <!-- If TF is used to get odometry, this is the default linear variance -->
  <arg name="odom_args" default=""/>
  <!-- More arguments for odometry (overwrite same parameters in rtabmap_args) -->
  <arg name="odom_sensor_sync" default="false"/>
  <arg name="odom_guess_frame_id" default=""/>
  <arg name="odom_guess_min_translation" default="0"/>
  <arg name="odom_guess_min_rotation" default="0"/>
  <arg name="odom_max_rate" default="0"/>
  <arg name="odom_expected_rate" default="0"/>
  <arg name="imu_topic" default="/imu/data"/>
  <!-- only used with VIO approaches -->
  <arg name="wait_imu_to_init" default="false"/>


  <arg name="subscribe_user_data" default="false"/>
  <!-- user data synchronized subscription -->
  <arg name="user_data_topic" default="/user_data"/>
  <arg name="user_data_async_topic" default="/user_data_async" />
  <!-- user data async subscription (rate should be lower than map update rate) -->

  <arg name="gps_topic" default="/gps/fix" />
  <!-- gps async subscription -->

  <arg name="tag_topic" default="/tag_detections" />
  <!-- apriltags async subscription -->
  <arg name="tag_linear_variance" default="0.0001" />
  <arg name="tag_angular_variance" default="9999" />
  <!-- >=9999 means ignore rotation in optimization, when rotation estimation of the tag is not reliable -->

  <!-- These arguments should not be modified directly, see referred topics without "_relay" suffix above -->
  <arg name="rgb_topic_relay" default="$(arg rgb_topic)"/>
  <arg name="depth_topic_relay" default="$(arg depth_topic)"/>

  <arg if="$(arg rgbd_sync)" name="rgbd_topic_relay" default="$(arg rgbd_topic)"/>
  <arg unless="$(arg rgbd_sync)" name="rgbd_topic_relay" default="$(arg rgbd_topic)_relay"/>

  <!-- <arg name="gen_scan" default="true"/> -->



  <!-- TODO: see https://answers.gazebosim.org/question/4266/gazebo-15-libgazebo_openni_kinectso-pointcloud-data-is-rotated-and-flipped/?answer=24822#post-id-24822 -->
  <node pkg="tf" type="static_transform_publisher" name="camera_2_base_link" args="0.0 0.0 0.0 -1.5707963267948966 0.0 -1.5707963267948966 /base_link /camera_link 100" />

  <!-- RTABMAP Nodes -->
  <group ns="$(arg namespace)">

    <!-- relays -->
    <group if="$(arg depth)">

      <group if="$(arg rgbd_sync)">
        <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync" output="$(arg output)">
          <remap from="rgb/image" to="$(arg rgb_topic_relay)"/>
          <remap from="depth/image" to="$(arg depth_topic_relay)"/>
          <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
          <remap from="rgbd_image" to="$(arg rgbd_topic_relay)"/>
          <param name="approx_sync" type="bool" value="$(arg approx_rgbd_sync)"/>
          <param name="queue_size" type="int" value="$(arg queue_size)"/>
          <param name="depth_scale" type="double" value="$(arg rgbd_depth_scale)"/>
          <param name="decimation" type="double" value="$(arg rgbd_decimation)"/>
        </node>
      </group>
    </group>

    <group unless="$(arg rgbd_sync)">
      <group if="$(arg subscribe_rgbd)">
        <node name="republish_rgbd_image" type="rgbd_relay" pkg="rtabmap_ros">
          <remap from="rgbd_image" to="$(arg rgbd_topic)"/>
        </node>
      </group>
    </group>

    <!-- Visual odometry -->
    <group>
      <group if="$(arg visual_odometry)">

        <!-- rgbd_odometry RGB-D Odometry -->
        <!-- TODO: We don't need  -->
        <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="$(arg output)" args="$(arg rtabmap_args) $(arg odom_args)" launch-prefix="$(arg launch_prefix)">
          <remap from="rgb/image" to="$(arg rgb_topic_relay)"/>
          <remap from="depth/image" to="$(arg depth_topic_relay)"/>
          <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
          <remap from="rgbd_image" to="$(arg rgbd_topic_relay)"/>
          <remap from="odom" to="$(arg odom_topic)"/>
          <remap from="imu" to="$(arg imu_topic)"/>

          <param name="frame_id" type="string" value="$(arg frame_id)"/>
          <param name="odom_frame_id" type="string" value="$(arg vo_frame_id)"/>
          <param name="publish_tf" type="bool" value="$(arg publish_tf_odom)"/>
          <param name="ground_truth_frame_id" type="string" value="$(arg ground_truth_frame_id)"/>
          <param name="ground_truth_base_frame_id" type="string" value="$(arg ground_truth_base_frame_id)"/>
          <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
          <param name="wait_imu_to_init" type="bool" value="$(arg wait_imu_to_init)"/>
          <param name="approx_sync" type="bool" value="$(arg approx_sync)"/>
          <param name="config_path" type="string" value="$(arg cfg)"/>
          <param name="queue_size" type="int" value="$(arg queue_size)"/>
          <param name="subscribe_rgbd" type="bool" value="$(arg subscribe_rgbd)"/>
          <param name="guess_frame_id" type="string" value="$(arg odom_guess_frame_id)"/>
          <param name="guess_min_translation" type="double" value="$(arg odom_guess_min_translation)"/>
          <param name="guess_min_rotation" type="double" value="$(arg odom_guess_min_rotation)"/>
          <param name="expected_update_rate" type="double" value="$(arg odom_expected_rate)"/>
          <param name="max_update_rate" type="double" value="$(arg odom_max_rate)"/>
        </node>

      </group>
    </group>


    <!-- rtabmap Visual SLAM (robot side) -->
    <!-- args: "delete_db_on_start" and "udebug" -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="$(arg output)" args="$(arg rtabmap_args)" launch-prefix="$(arg launch_prefix)">
      <param name="subscribe_depth" type="bool" value="$(arg depth)"/>
      <param name="subscribe_rgb" type="bool" value="$(arg depth)"/>
      <param name="subscribe_rgbd" type="bool" value="$(arg subscribe_rgbd)"/>
      <param name="subscribe_scan" type="bool" value="$(arg subscribe_scan)"/>
      <param name="subscribe_user_data" type="bool" value="$(arg subscribe_user_data)"/>
      <param if="$(arg visual_odometry)" name="subscribe_odom_info" type="bool" value="true"/>
      <param name="frame_id" type="string" value="$(arg frame_id)"/>
      <param name="map_frame_id" type="string" value="$(arg map_frame_id)"/>
      <param name="odom_frame_id" type="string" value="$(arg odom_frame_id)"/>
      <param name="publish_tf" type="bool" value="$(arg publish_tf_map)"/>
      <param name="ground_truth_frame_id" type="string" value="$(arg ground_truth_frame_id)"/>
      <param name="ground_truth_base_frame_id" type="string" value="$(arg ground_truth_base_frame_id)"/>
      <param name="odom_tf_angular_variance" type="double" value="$(arg odom_tf_angular_variance)"/>
      <param name="odom_tf_linear_variance" type="double" value="$(arg odom_tf_linear_variance)"/>
      <param name="odom_sensor_sync" type="bool" value="$(arg odom_sensor_sync)"/>
      <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
      <param name="database_path" type="string" value="$(arg database_path)"/>
      <param name="approx_sync" type="bool" value="$(arg approx_sync)"/>
      <param name="config_path" type="string" value="$(arg cfg)"/>
      <param name="queue_size" type="int" value="$(arg queue_size)"/>
      <param name="landmark_linear_variance" type="double" value="$(arg tag_linear_variance)"/>
      <param name="landmark_angular_variance" type="double" value="$(arg tag_angular_variance)"/>

      <remap from="rgb/image" to="$(arg rgb_topic_relay)"/>
      <remap from="depth/image" to="$(arg depth_topic_relay)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>

      <remap from="rgbd_image" to="$(arg rgbd_topic_relay)"/>

      <remap from="scan" to="$(arg scan_topic)"/>
      <remap from="user_data" to="$(arg user_data_topic)"/>
      <remap from="user_data_async" to="$(arg user_data_async_topic)"/>
      <remap from="gps/fix" to="$(arg gps_topic)"/>
      <remap from="tag_detections" to="$(arg tag_topic)"/>
      <remap from="odom" to="$(arg odom_topic)"/>
      <remap from="imu" to="$(arg imu_topic)"/>

      <!-- localization mode -->
      <param if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
      <!-- RTAB-Map's parameters 来源：http://wiki.ros.org/rtabmap_ros/Tutorials/SetupOnYourRobot#Kinect_.2B-_Odometry_.2B-_2D_laser -->
      <param name="RGBD/ProximityBySpace" type="string" value="false"/>
      <param name="RGBD/AngularUpdate" type="string" value="0.01"/>
      <param name="RGBD/LinearUpdate" type="string" value="0.01"/>
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
      <param name="Reg/Force3DoF" type="string" value="true"/>
      <param name="Vis/MinInliers" type="string" value="12"/>
    </node>

    <!-- rtabmapviz Visualisation RTAB-Map -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(arg gui_cfg)" output="$(arg output)" launch-prefix="$(arg launch_prefix)">
      <param name="subscribe_depth" type="bool" value="$(arg depth)"/>
      <param name="subscribe_rgbd" type="bool" value="$(arg subscribe_rgbd)"/>
      <param name="subscribe_scan" type="bool" value="$(arg subscribe_scan)"/>
      <remap from="scan" to="$(arg scan_topic)"/>
      <param if="$(arg visual_odometry)" name="subscribe_odom_info" type="bool" value="true"/>
      <param name="frame_id" type="string" value="$(arg frame_id)"/>
      <param name="odom_frame_id" type="string" value="$(arg odom_frame_id)"/>
      <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
      <param name="queue_size" type="int" value="$(arg queue_size)"/>
      <param name="approx_sync" type="bool" value="$(arg approx_sync)"/>

      <remap from="rgb/image" to="$(arg rgb_topic_relay)"/>
      <remap from="depth/image" to="$(arg depth_topic_relay)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>

      <remap from="rgbd_image" to="$(arg rgbd_topic_relay)"/>

      <remap from="odom" to="$(arg odom_topic)"/>
    </node>

  </group>

  <!-- Visualization RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(arg rviz_cfg)"/>
  <node if="$(arg rviz)" pkg="nodelet" type="nodelet" name="points_xyzrgb" args="standalone rtabmap_ros/point_cloud_xyzrgb" output="$(arg output)">
    <remap unless="$(arg subscribe_rgbd)" from="rgb/image" to="$(arg rgb_topic_relay)"/>
    <remap unless="$(arg subscribe_rgbd)" from="depth/image" to="$(arg depth_topic_relay)"/>
    <remap unless="$(arg subscribe_rgbd)" from="rgb/camera_info" to="$(arg camera_info_topic)"/>
    <remap from="rgbd_image" to="$(arg rgbd_topic_relay)"/>
    <remap from="cloud" to="voxel_cloud" />

    <param name="decimation" type="double" value="4"/>
    <param name="voxel_size" type="double" value="0.0"/>
    <param name="approx_sync" type="bool" value="$(arg approx_sync)"/>
  </node>

</launch>
